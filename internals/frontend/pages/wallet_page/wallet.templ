package wallet_page

import (
	"fmt"
	"github.com/diegorezm/DBlockchain/internals/blockchain"
	"github.com/diegorezm/DBlockchain/internals/frontend/components"
	"github.com/diegorezm/DBlockchain/internals/frontend/components/icons"
	"github.com/diegorezm/DBlockchain/internals/frontend/layout"
)

templ WalletPage(currentPublicKey string, utxos []blockchain.UTXO) {
	@layout.DashboardLayout("/wallet") {
		<main class="p-6 max-w-2xl w-full mx-auto">
			<h1 class="text-3xl font-bold mb-6">Wallet</h1>
			if currentPublicKey == "" {
				<form method="post" action="/api/wallet/save-key" class="space-y-4">
					<label class="label">
						<span class="label-text">Paste your public key:</span>
					</label>
					<textarea name="pubKey" class="textarea textarea-bordered w-full h-32" required></textarea>
					<button class="btn btn-primary" type="submit">Set Key</button>
				</form>
				<div class="mt-6 text-sm text-center">
					<span>Don't have a wallet yet?</span>
					<a href="/wallet/create" class="link-secondary">Create one</a>
				</div>
			} else {
				<nav class="mb-6 w-full">
					<button class="btn btn-md btn-primary" onclick="buy_dcoins_modal.showModal()">
						@icons.HandCoins()
						Buy more dcoins!
					</button>
					<dialog id="buy_dcoins_modal" class="modal">
						<div class="modal-box">
							<form x-data={ fmt.Sprintf("buyDcoinForm('%s')", currentPublicKey) } @submit.prevent="submit">
								<label class="label">Private Key</label>
								<textarea x-model="privateKey" class="textarea textarea-bordered w-full mb-2" required></textarea>
								<label class="label">Amount</label>
								<input type="number" x-model="amount" class="input input-bordered w-full mb-4" required min="1"/>
								<div class="modal-action">
									<button class="btn btn-md btn-outline" type="button" onclick="buy_dcoins_modal.close()">Cancel</button>
									<button class="btn btn-md btn-primary" type="submit">Confirm</button>
								</div>
								<p class="text-success" x-text="successMessage"></p>
								<p class="text-error" x-text="errorMessage"></p>
							</form>
						</div>
						<form method="dialog" class="modal-backdrop">
							<button>close</button>
						</form>
					</dialog>
				</nav>
				<div class="mb-4 w-full">
					@components.CopyAndPaste("pubKey", "Your Public key", currentPublicKey)
				</div>
				<form action="/api/wallet/forget-key" method="post">
					<button class="btn btn-secondary btn-sm mb-4">Forget key</button>
				</form>
				<div class="card bg-base-100 p-4 shadow">
					<h2 class="text-xl font-semibold mb-2">UTXOs</h2>
					<p>{ len(utxos) }</p>
				</div>
			}
			<script>
    document.addEventListener("alpine:init", () => {
      Alpine.data("buyDcoinForm", (publicKey) => ({
        privateKey: "",
        amount: 1,
        successMessage: "",
        errorMessage: "",

        async submit() {
          this.successMessage = "";
          this.errorMessage = "";

          try {
            const res = await fetch("/api/transactions/buy", {
              method: "POST",
              headers: {"Content-Type": "application/json"},
              body: JSON.stringify({
                private_key: this.privateKey,
                to: publicKey,
                amount: parseFloat(this.amount),
              }),
            });

            const data = await res.json();
            if (res.ok) {
              this.successMessage = data.message || "Transaction submitted!";
              this.privateKey = "";
              this.amount = 1;
            } else {
              this.errorMessage = data.message || "Failed to create transaction.";
            }
          } catch (err) {
            this.errorMessage = "Something went wrong.";
          }
        }
      }));
    });
  </script>
		</main>
	}
}
