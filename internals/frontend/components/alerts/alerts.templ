package alerts

import "fmt"
import "github.com/diegorezm/DBlockchain/internals/frontend/components/icons"

type AlertVariant string

const (
	Error   AlertVariant = "error"
	Info    AlertVariant = "info"
	Warning AlertVariant = "warning"
)

type Props struct {
	Variant AlertVariant
	Message string
}

templ Alerts(props Props) {
	<div
		role="alert"
		class={ fmt.Sprintf("mt-2 mb-2 alert %s", getAlertClassName(props.Variant)) }
		id={ fmt.Sprintf("alert-%s", props.Variant) }
		x-data="{show: true}"
		x-show="show"
	>
		@getAlertIcon(props.Variant)
		<span>{ props.Message }</span>
	</div>
}

templ AlertError(message string) {
	@Alerts(Props{
		Variant: Error,
		Message: message,
	})
}

templ AlertInfo(message string) {
	@Alerts(Props{
		Variant: Info,
		Message: message,
	})
}

templ AlertWarning(message string) {
	@Alerts(Props{
		Variant: Warning,
		Message: message,
	})
}

templ getAlertIcon(variant AlertVariant) {
	<button @click="show = false" class="btn btn-sm btn-ghost">
		switch variant {
			case Error:
				@icons.Error()
			case Info:
				@icons.Info()
			case Warning:
				@icons.Warning()
			default:
				@icons.Info()
		}
	</button>
}

func getAlertClassName(varaint AlertVariant) string {
	switch varaint {
	case Error:
		return "alert-error"
	case Info:
		return "alert-info"
	case Warning:
		return "alert-warning"
	default:
		return ""
	}
}
